{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payLoad","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5467b718.chunk.js","sourcesContent":["/** @format */\r\n\r\n// Si no hay un state inicial que sea un arreglo vacio\r\nexport const todoReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\t\t//Si la accion es de tipo 'add' se retorna el state actual mas el payLoad de la accion.\r\n\t\tcase 'add':\r\n\t\t\treturn [...state, action.payLoad];\r\n\r\n\t\tcase 'delete':\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payLoad);\r\n\r\n\t\tcase 'toggle':\r\n\t\t\treturn state.map((todo) => {\r\n\t\t\t\tif (todo.id === action.payLoad) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...todo,\r\n\t\t\t\t\t\tdone: !todo.done,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn todo;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t// Forma Corta\r\n\t\t// case 'toggle':\r\n\t\t// \treturn state.map((todo) =>\r\n\t\t// \t\ttodo.id === action.payLoad ? { ...todo, done: !todo.done } : todo\r\n\t\t// \t);\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n\treturn (\r\n\t\t<li key={todo.id} className='list-group-item'>\r\n\t\t\t<p\r\n\t\t\t\tclassName={`${todo.done && 'complete'}`}\r\n\t\t\t\tonClick={() => handleToggle(todo.id)}\r\n\t\t\t>\r\n\t\t\t\t{index + 1}. {todo.desc}\r\n\t\t\t</p>\r\n\t\t\t<button className='btn btn-danger' onClick={() => handleDelete(todo.id)}>\r\n\t\t\t\tBorrar\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nTodoListItem.propTypes = {\r\n\ttodos: PropTypes.array,\r\n\tindex: PropTypes.number.isRequired,\r\n\thandleDelete: PropTypes.func.isRequired,\r\n\thandleToggle: PropTypes.func.isRequired,\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n\treturn (\r\n\t\t<ul className='list-group list-group-flush'>\r\n\t\t\t{todos.map((todo, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<TodoListItem\r\n\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\t\t\thandleToggle={handleToggle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nTodoList.propTypes = {\r\n\ttodos: PropTypes.array.isRequired,\r\n\thandleDelete: PropTypes.func.isRequired,\r\n\thandleToggle: PropTypes.func.isRequired,\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\tconst [{ description }, handleInputChange, reset] = useForm({\r\n\t\tdescription: '',\r\n\t});\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (description.trim().length <= 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst newTodo = {\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\tdesc: description,\r\n\t\t\tdone: false,\r\n\t\t};\r\n\r\n\t\thandleAddTodo(newTodo);\r\n\t\treset();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Agregar TODO</h4>\r\n\t\t\t<hr />\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='description'\r\n\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\tplaceholder='Aprender...'\r\n\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\tvalue={description}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button type='submit' className='btn btn-outline-primary mt-1 w-100'>\r\n\t\t\t\t\tAgregar\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\tconst [values, setValues] = useState(initialState);\r\n\r\n\tconst reset = () => {\r\n\t\tsetValues(initialState);\r\n\t};\r\n\r\n\tconst handleInputChange = ({ target }) => {\r\n\t\tsetValues({\r\n\t\t\t...values,\r\n\t\t\t[target.name]: target.value,\r\n\t\t});\r\n\t};\r\n\r\n\treturn [values, handleInputChange, reset];\r\n};\r\n","/** @format */\r\n\r\nimport React, { useReducer, useEffect } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\nimport './styles.css';\r\n\r\n// Punto inicial de la App\r\nconst init = () => {\r\n\t// Trae el listado de TODOS del localStorage\r\n\treturn JSON.parse(localStorage.getItem('todos')) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n\t// Reducer\r\n\tconst [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n\t// Efecto que vuelve a renderizar solo si hay cambios en los 'todos'\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('todos', JSON.stringify(todos));\r\n\t}, [todos]);\r\n\r\n\t// Borrar TODO\r\n\tconst handleDelete = (todoId) => {\r\n\t\tconst action = {\r\n\t\t\ttype: 'delete',\r\n\t\t\tpayLoad: todoId,\r\n\t\t};\r\n\r\n\t\tdispatch(action);\r\n\t};\r\n\r\n\t// Marcar como completado\r\n\tconst handleToggle = (todoId) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'toggle',\r\n\t\t\tpayLoad: todoId,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddTodo = (newTodo) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'add',\r\n\t\t\tpayLoad: newTodo,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Todo App ( {todos.length} )</h1>\r\n\t\t\t<hr />\r\n\t\t\t<div className='row'>\r\n\t\t\t\t{/* Lista de TODOS */}\r\n\t\t\t\t<div className='col-7'>\r\n\t\t\t\t\t<TodoList\r\n\t\t\t\t\t\ttodos={todos}\r\n\t\t\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\t\t\thandleToggle={handleToggle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Formulario para agregar TODOS */}\r\n\t\t\t\t<div className='col-5'>\r\n\t\t\t\t\t<TodoAdd handleAddTodo={handleAddTodo} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// // import { HookApp } from './HookApp';\n// // import { CounterApp } from './components/01-useState/CounterApp';\n// // import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n// // import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// // import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n// // import { MultipleCustomHooks } from './components/03-samples/MultipleCustomHooks';\n// // import { FocusScreen } from './components/04-useRef/FocusScreen';\n// // import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n// // import { LayoutEffect } from './components/05-useLayoutEffect/LayoutEffect';\n// // import { Memorize } from './components/06-memos/Memorize';\n// // import { MemoHook } from './components/06-useMemos/MemoHook';\n// // import { CallbackHook } from './components/06-useMemos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\n// import './components/08-useReducer/intro-reducer';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n// import { MainApp } from './components/09-useContext/MainApp';\n\nReactDOM.render(<TodoApp />, document.getElementById('root'));\n"],"sourceRoot":""}